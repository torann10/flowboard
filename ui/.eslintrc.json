{
  "root": true,
  "overrides": [
    {
      "files": ["*.ts"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/stylistic",
        "plugin:@angular-eslint/recommended"
      ],
      "rules": {
        // https://eslint.org/docs/latest/rules/
        // eslint: possible problems
        "no-constructor-return": "error",
        "no-duplicate-imports": "error",
        "no-prototype-builtins": "off",
        "no-self-compare": "error",
        "no-template-curly-in-string": "error",
        "no-unreachable-loop": "error",
        // eslint: suggestions
        "complexity": ["error", 10],
        "default-case-last": "error",
        "dot-notation": "error",
        "eqeqeq": ["error", "smart"],
        "id-denylist": ["error", "any", "Number", "number", "String", "string", "Boolean", "boolean", "Undefined", "undefined"],
        "max-classes-per-file": "error",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-console": "warn",
        "no-div-regex": "error",
        "no-else-return": "error",
        "no-empty": "off",
        "no-eq-null": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-label": "error",
        "no-implicit-globals": "error",
        "no-implied-eval": "error",
        "no-iterator": "error",
        "no-label-var": "error",
        "no-labels": ["error", { "allowLoop": true }],
        "no-lone-blocks": "error",
        "no-lonely-if": "error",
        "no-loop-func": "error",
        "no-multi-assign": "error",
        "no-multi-str": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-octal-escape": "error",
        "no-param-reassign": "error",
        "no-proto": "error",
        "no-redeclare": "off",
        "no-restricted-syntax": [
          "error",
          {
            "selector": "MethodDefinition[static = true] ThisExpression",
            "message": "Static methods should not use 'this'."
          }
        ],
        "no-return-assign": "error",
        "no-script-url": "error",
        "no-sequences": "error",
        "no-undef-init": "error",
        "no-underscore-dangle": [
          "error",
          {
            "allowAfterThis": true
          }
        ],
        "no-unneeded-ternary": "error",
        "no-useless-call": "error",
        "no-useless-computed-key": "error",
        "no-useless-concat": "error",
        "no-useless-constructor": "off",
        "no-useless-rename": "error",
        "no-useless-return": "error",
        "no-var": "error",
        "no-void": "error",
        "object-shorthand": "error",
        "one-var": ["error", "never"],
        "operator-assignment": ["error", "always"],
        "prefer-const": "error",
        "prefer-exponentiation-operator": "error",
        "prefer-object-spread": "error",
        "prefer-regex-literals": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "radix": ["error", "as-needed"],
        "symbol-description": "error",
        "yoda": ["error", "never"],
        // https://typescript-eslint.io/rules/#rules
        // plugin:@typescript-eslint
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array-simple"
          }
        ],
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "overrides": {
              "accessors": "explicit",
              "constructors": "no-public",
              "methods": "explicit",
              "properties": "explicit",
              "parameterProperties": "explicit"
            }
          }
        ],
        "@typescript-eslint/explicit-module-boundary-types": [
          "error",
          {
            "allowArgumentsExplicitlyTypedAsAny": true,
            "allowTypedFunctionExpressions": true,
            "allowHigherOrderFunctions": false,
            "allowDirectConstAssertionInArrowFunctions": false
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "enumMember",
            "format": ["UPPER_CASE"]
          },
          {
            "selector": "default",
            "format": ["camelCase", "UPPER_CASE", "PascalCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "variable",
            "types": ["boolean"],
            "format": ["PascalCase"],
            "prefix": ["is", "are", "has", "should"]
          },
          {
            "selector": "memberLike",
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "property",
            "format": ["UPPER_CASE"],
            "modifiers": ["static", "readonly"],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          }
        ],
        "@typescript-eslint/no-confusing-non-null-assertion": "error",
        "@typescript-eslint/no-deprecated": "warn",
        "@typescript-eslint/no-empty-object-type": "off",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-inferrable-types": [
          "warn",
          {
            "ignoreParameters": true,
            "ignoreProperties": false
          }
        ],
        "@typescript-eslint/no-loss-of-precision": "warn",
        "@typescript-eslint/no-mixed-enums": "error",
        "@typescript-eslint/no-namespace": [
          "error",
          {
            "allowDeclarations": true,
            "allowDefinitionFiles": true
          }
        ],
        "@typescript-eslint/no-redeclare": "error",
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/no-this-alias": [
          "error",
          {
            "allowDestructuring": false
          }
        ],
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-parameter-property-assignment": "error",
        "@typescript-eslint/no-unnecessary-qualifier": "warn",
        "@typescript-eslint/no-unnecessary-template-expression": "error",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "vars": "all",
            "args": "after-used",
            "argsIgnorePattern": "^_",
            "caughtErrorsIgnorePattern": "^_",
            "destructuredArrayIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "ignoreRestSiblings": false
          }
        ],
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/no-useless-constructor": "error",
        "@typescript-eslint/no-useless-empty-export": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/non-nullable-type-assertion-style": "warn",
        "@typescript-eslint/only-throw-error": "error",
        "@typescript-eslint/prefer-find": "warn",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-includes": "warn",
        "@typescript-eslint/prefer-literal-enum-member": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "warn",
        "@typescript-eslint/prefer-optional-chain": "warn",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/prefer-reduce-type-parameter": "warn",
        "@typescript-eslint/prefer-regexp-exec": "warn",
        "@typescript-eslint/prefer-string-starts-ends-with": "warn",
        "@typescript-eslint/require-array-sort-compare": "warn",
        "@typescript-eslint/restrict-template-expressions": [
          "error",
          {
            "allowNumber": true
          }
        ],
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/unified-signatures": "error"
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {
        // https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin-template/README.md
        // possible problems
        "@angular-eslint/template/no-duplicate-attributes": "error",
        // suggestions
        "@angular-eslint/template/conditional-complexity": "error",
        "@angular-eslint/template/no-inline-styles": ["error"],
        "@angular-eslint/template/no-interpolation-in-attributes": "warn",
        "@angular-eslint/template/prefer-control-flow": "warn",
        "@angular-eslint/template/prefer-ngsrc": "warn",
        // layout
        "@angular-eslint/template/prefer-self-closing-tags": "warn"
      }
    },
    {
      "files": ["*.ts"],
      "extends": ["plugin:@ngrx/all"],
      "rules": {
        "@ngrx/on-function-explicit-return-type": "off"
      }
    }
  ]
}
